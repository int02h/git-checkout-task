#!/bin/sh

# Copyright (c) 2023 Daniil Popov
# Licensed under the MIT License.

# Version 1.0.1
# https://github.com/int02h/git-checkout-task

set -e

readonly task_id=$1

readonly currentBranch=$(git rev-parse --abbrev-ref HEAD)
if [[ $currentBranch == *$task_id* ]]
then
	echo "Already on $currentBranch"
	exit 0
fi

readonly localBranches=( $(git branch --format="%(refname:lstrip=2)" | grep "$task_id") )
readonly remoteBranches=( $(git branch -r --format="%(refname:lstrip=3)" | grep "$task_id") )
readonly branches=(`for R in "${localBranches[@]}" "${remoteBranches[@]}" ; do echo "$R" ; done | sort -du`)


if [ ${#branches[@]} -eq 0 ]
then
	echo "No branches found for $task_id"
	exit 1
fi

if [ ${#branches[@]} -eq 1 ]
then
	echo "Checking out ${branches[0]}"
	git checkout ${branches[0]}
	exit 0
fi

echo "There are clashing branches for $task_id:"
printf -- "- %s\n" "${branches[@]}"
exit 1